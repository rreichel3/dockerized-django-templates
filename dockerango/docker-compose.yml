version: '3'
services:
  db:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - db
  traefik:
    container_name: traefik
    image: traefik:v2.0
    command:
        - "--api.insecure=true"
        - "--providers.docker=true"
        - "--entryPoints.web.address=:80"
        - "--entryPoints.websecure.address=:443"
        - "--certificatesResolvers.le.acme.email=<XXXXXXX@email.com>"
        - "--certificatesResolvers.le.acme.storage=acme.json"
        - "--certificatesResolvers.le.acme.tlsChallenge=true"
        - "--certificatesResolvers.le.acme.httpChallenge=true"
        - "--certificatesResolvers.le.acme.httpChallenge.entryPoint=web"
    restart: always
    ports:
        - 80:80
        - 443:443
        - 8080:8080
    networks:
        - web
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ./acme.json:/acme.json
    labels:
        # Redirect all HTTP to HTTPS permanently
        - traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)
        - traefik.http.routers.http_catchall.entrypoints=web
        - traefik.http.routers.http_catchall.middlewares=https_redirect
        - traefik.http.middlewares.https_redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.https_redirect.redirectscheme.permanent=true
  django:
    build: './'
    command: ./docker-entrypoint.sh
    expose:
      - 8000
    networks:
      - web
      - db
    volumes:
      - .:/code
    depends_on:
      - db
      - traefik
    labels:
      - traefik.http.routers.django.rule=Host(`dockerango.rj3.me`)
      - traefik.http.routers.django.tls=true
      - traefik.http.routers.django.tls.certresolver=le
      - traefik.http.middlewares.enable-compression.compress=true
      - traefik.http.routers.django.middlewares=enable-compression@docker
networks:
  web: 
    external: true
  db:
    external: false